{"version":3,"sources":["components/NavBar.js","components/formModal.js","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","showModalFunction","noteClearanceFunction","className","onClick","FormModal","props","open","showStatement","onClose","closeModalFunction","classNames","modal","closeIcon","center","onSubmit","noteSubmissionFunction","type","name","placeholder","onChange","noteMainTitleFunction","value","noteMainTitleValue","required","noteSubTitleFunction","noteSubTitleValue","cols","rows","noteDescriptionFunction","noteDescriptionValue","Board","notesData","map","noteObj","noteIndex","noteMainTitle","noteSubTitle","noteDescription","App","useState","show","setShow","setNoteMainTitle","setNoteSubTitle","setNoteDescription","notes","setNotes","e","target","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"iPAeeA,EAbA,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,kBAAmBC,EAA4B,EAA5BA,sBACnC,OACE,sBAAKC,UAAU,SAAf,UACE,wCACA,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAD,CAAQA,UAAU,cAAcC,QAASH,IACzC,cAAC,IAAD,CAAUE,UAAU,gBACpB,cAAC,IAAD,CAAWA,UAAU,cAAcC,QAASF,W,gBC0CrCG,EAhDG,SAACC,GACjB,OACE,cAAC,IAAD,CACEC,KAAMD,EAAME,cACZC,QAASH,EAAMI,mBACfC,WAAY,CACVC,MAAO,yBACPC,UAAW,kBAEbC,QAAM,EAPR,SASE,sBAAKX,UAAU,aAAf,UACE,kDACA,uBAAMY,SAAUT,EAAMU,uBAAtB,UACE,uBACEC,KAAK,OACLC,KAAK,gBACLC,YAAY,kBACZC,SAAUd,EAAMe,sBAChBC,MAAOhB,EAAMiB,mBACbC,UAAQ,IAEV,uBACEP,KAAK,OACLC,KAAK,eACLC,YAAY,iBACZC,SAAUd,EAAMmB,qBAChBH,MAAOhB,EAAMoB,kBACbF,UAAQ,IAEV,0BACEN,KAAK,kBACLS,KAAK,KACLC,KAAK,KACLT,YAAY,mBACZC,SAAUd,EAAMuB,wBAChBP,MAAOhB,EAAMwB,qBACbN,UAAQ,IAEV,wBAAQP,KAAK,SAASb,QAASE,EAAMI,mBAArC,kCCxBKqB,EAlBD,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACf,OACE,sBAAM7B,UAAU,QAAhB,SACG6B,EAAUC,KAAI,SAACC,EAASC,GACvB,OACE,qBAAKhC,UAAU,OAAf,SACE,sBAAKA,UAAU,YAAf,UACE,6BAAK+B,EAAQE,gBACb,6BAAKF,EAAQG,eACb,4BAAIH,EAAQI,sBAJWH,SCgFtBI,MA/Ef,WAAe,MAGWC,oBAAS,GAHpB,mBAGNC,EAHM,KAGAC,EAHA,OAe6BF,mBAAS,IAftC,mBAeNJ,EAfM,KAeSO,EAfT,OAqB2BH,mBAAS,IArBpC,mBAqBNH,EArBM,KAqBQO,EArBR,OA6BiCJ,mBAAS,IA7B1C,mBA6BNF,EA7BM,KA6BWO,EA7BX,OAqCaL,mBAAS,IArCtB,mBAqCNM,EArCM,KAqCCC,EArCD,KAqDb,OACE,eAAC,WAAD,WACE,cAAC,EAAD,CACE9C,kBAnDY,WAChByC,GAAQ,IAmDJxC,sBARmB,WACvB6C,EAAS,OASP,cAAC,EAAD,CAEErC,mBApDa,WACjBgC,GAAQ,IAoDJlC,cAAeiC,EAEfpB,sBA/CsB,SAAC2B,GAC3BL,EAAiBK,EAAEC,OAAO3B,QA+CtBG,qBA1CqB,SAACuB,GAC1BJ,EAAgBI,EAAEC,OAAO3B,QA0CrBO,wBAnCwB,SAACmB,GAC7BH,EAAmBG,EAAEC,OAAO3B,QAoCxBC,mBAAoBa,EACpBV,kBAAmBW,EACnBP,qBAAsBQ,EAEtBtB,uBAjCuB,SAACgC,GAC5BA,EAAEE,iBACFH,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEV,gBAAeC,eAAcC,sBACnDK,EAAiB,IACjBC,EAAgB,IAChBC,EAAmB,OA8BjB,cAAC,EAAD,CAAOb,UAAWc,QCpETK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.cc3b3d7f.chunk.js","sourcesContent":["import { FaPlus, FaSearch, FaSyncAlt } from \"react-icons/fa\";\n\nconst NavBar = ({ showModalFunction, noteClearanceFunction }) => {\n  return (\n    <nav className=\"NavBar\">\n      <h1>NOTELY</h1>\n      <div className=\"actions\">\n        <FaPlus className=\"action-icon\" onClick={showModalFunction} />\n        <FaSearch className=\"action-icon\" />\n        <FaSyncAlt className=\"action-icon\" onClick={noteClearanceFunction} />\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\n\nconst FormModal = (props) => {\n  return (\n    <Modal\n      open={props.showStatement}\n      onClose={props.closeModalFunction}\n      classNames={{\n        modal: \"react_responsive_modal\",\n        closeIcon: \"form_close_btn\",\n      }}\n      center\n    >\n      <div className=\"form_modal\">\n        <h1>Create Your Note</h1>\n        <form onSubmit={props.noteSubmissionFunction}>\n          <input\n            type=\"text\"\n            name=\"noteMainTitle\"\n            placeholder=\"Note Main Title\"\n            onChange={props.noteMainTitleFunction}\n            value={props.noteMainTitleValue}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"noteSubTitle\"\n            placeholder=\"Note Sub Title\"\n            onChange={props.noteSubTitleFunction}\n            value={props.noteSubTitleValue}\n            required\n          />\n          <textarea\n            name=\"noteDescription\"\n            cols=\"30\"\n            rows=\"10\"\n            placeholder=\"Note Description\"\n            onChange={props.noteDescriptionFunction}\n            value={props.noteDescriptionValue}\n            required\n          />\n          <button type=\"submit\" onClick={props.closeModalFunction}>\n            Create Note\n          </button>\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\nexport default FormModal;\n","const Board = ({ notesData }) => {\n  return (\n    <main className=\"Board\">\n      {notesData.map((noteObj, noteIndex) => {\n        return (\n          <div className=\"note\" key={noteIndex}>\n            <div className=\"note-text\">\n              <h1>{noteObj.noteMainTitle}</h1>\n              <h3>{noteObj.noteSubTitle}</h3>\n              <p>{noteObj.noteDescription}</p>\n            </div>\n          </div>\n        );\n      })}\n    </main>\n  );\n};\n\nexport default Board;\n","import { Fragment, useState } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport FormModal from \"./components/formModal\";\nimport Board from \"./components/Board\";\n\nfunction App() {\n  // show and hide implementations on modal\n\n  const [show, setShow] = useState(false);\n\n  const showModal = () => {\n    setShow(true);\n  };\n\n  const closeModal = () => {\n    setShow(false);\n  };\n\n  // got the main and sub title of the note\n\n  const [noteMainTitle, setNoteMainTitle] = useState(\"\");\n\n  const handleNoteMainTitle = (e) => {\n    setNoteMainTitle(e.target.value);\n  };\n\n  const [noteSubTitle, setNoteSubTitle] = useState(\"\");\n\n  const handleNoteSubTitle = (e) => {\n    setNoteSubTitle(e.target.value);\n  };\n\n  // got the description of the note\n\n  const [noteDescription, setNoteDescription] = useState(\"\");\n\n  const handleNoteDescription = (e) => {\n    setNoteDescription(e.target.value);\n  };\n\n  // submission of the note\n\n  const [notes, setNotes] = useState([]);\n\n  const handleNoteSubmission = (e) => {\n    e.preventDefault();\n    setNotes([...notes, { noteMainTitle, noteSubTitle, noteDescription }]);\n    setNoteMainTitle(\"\");\n    setNoteSubTitle(\"\");\n    setNoteDescription(\"\");\n  };\n\n  // clear all the notes\n\n  const handleClearNotes = () => {\n    setNotes(\"\");\n  };\n\n  return (\n    <Fragment>\n      <NavBar\n        showModalFunction={showModal}\n        noteClearanceFunction={handleClearNotes}\n      />\n      <FormModal\n        // modal props\n        closeModalFunction={closeModal}\n        showStatement={show}\n        // input function props\n        noteMainTitleFunction={handleNoteMainTitle}\n        noteSubTitleFunction={handleNoteSubTitle}\n        noteDescriptionFunction={handleNoteDescription}\n        // input value props\n        noteMainTitleValue={noteMainTitle}\n        noteSubTitleValue={noteSubTitle}\n        noteDescriptionValue={noteDescription}\n        // note submission prop\n        noteSubmissionFunction={handleNoteSubmission}\n      />\n      <Board notesData={notes} />\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}