{"version":3,"sources":["components/NavBar.js","components/formModal.js","components/searchModal.js","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","showFormModalFunction","noteClearanceFunction","showSearchModalFunction","className","onClick","FormModal","props","open","noteModalShowStatement","onClose","closeFormModalFunction","classNames","modal","closeIcon","center","onSubmit","noteSubmissionFunction","type","name","placeholder","onChange","noteMainTitleFunction","value","noteMainTitleValue","required","noteSubTitleFunction","noteSubTitleValue","cols","rows","noteDescriptionFunction","noteDescriptionValue","SearchModal","searchModalShowStatement","closeSearchModalFunction","noteSearchFunction","noteSearchQueryFunction","searchQueryValue","Board","notesData","map","noteObj","noteIndex","noteMainTitle","noteSubTitle","noteDescription","App","useState","showFormModal","setShowFormModal","showSearchModal","setShowSearchModal","setNoteMainTitle","setNoteSubTitle","setNoteDescription","notes","setNotes","searchNoteQuery","setSearchNoteQuery","e","target","preventDefault","searchedNotes","filter","obj","includes","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e737db6a.chunk.js","sourcesContent":["import { FaPlus, FaSearch, FaSyncAlt } from \"react-icons/fa\";\n\nconst NavBar = ({\n  showFormModalFunction,\n  noteClearanceFunction,\n  showSearchModalFunction,\n}) => {\n  return (\n    <nav className=\"NavBar\">\n      <h1>NOTELY</h1>\n      <div className=\"actions\">\n        <FaPlus className=\"action-icon\" onClick={showFormModalFunction} />\n        <FaSearch className=\"action-icon\" onClick={showSearchModalFunction} />\n        <FaSyncAlt className=\"action-icon\" onClick={noteClearanceFunction} />\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\n\nconst FormModal = (props) => {\n  return (\n    <Modal\n      open={props.noteModalShowStatement}\n      onClose={props.closeFormModalFunction}\n      classNames={{\n        modal: \"react_responsive_modal_1\",\n        closeIcon: \"form_close_btn\",\n      }}\n      center\n    >\n      <div className=\"form_modal\">\n        <h1>Create Your Note</h1>\n        <form onSubmit={props.noteSubmissionFunction}>\n          <input\n            type=\"text\"\n            name=\"noteMainTitle\"\n            placeholder=\"Note Main Title\"\n            onChange={props.noteMainTitleFunction}\n            value={props.noteMainTitleValue}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"noteSubTitle\"\n            placeholder=\"Note Sub Title\"\n            onChange={props.noteSubTitleFunction}\n            value={props.noteSubTitleValue}\n            required\n          />\n          <textarea\n            name=\"noteDescription\"\n            cols=\"30\"\n            rows=\"10\"\n            placeholder=\"Note Description\"\n            onChange={props.noteDescriptionFunction}\n            value={props.noteDescriptionValue}\n            required\n          />\n          <button type=\"submit\" onClick={props.closeFormModalFunction}>\n            Create Note\n          </button>\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\nexport default FormModal;\n","import \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\n\nconst SearchModal = (props) => {\n  return (\n    <Modal\n      open={props.searchModalShowStatement}\n      onClose={props.closeSearchModalFunction}\n      classNames={{\n        modal: \"react_responsive_modal_1 react_responsive_modal_2\",\n        closeIcon: \"form_close_btn\",\n      }}\n      center\n    >\n      <div className=\"form_modal search_modal\">\n        <h1>Search Note</h1>\n        <form onSubmit={props.noteSearchFunction}>\n          <input\n            type=\"text\"\n            name=\"search-input\"\n            placeholder=\"Search By name\"\n            onChange={props.noteSearchQueryFunction}\n            value={props.searchQueryValue}\n            required\n          />\n          <button type=\"submit\" onClick={props.closeSearchModalFunction}>\n            Search Note\n          </button>\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\nexport default SearchModal;\n","const Board = ({ notesData }) => {\n  return (\n    <main className=\"Board\">\n      {notesData.map((noteObj, noteIndex) => {\n        return (\n          <div className=\"note\" key={noteIndex}>\n            <div className=\"note-text\">\n              <h1>{noteObj.noteMainTitle}</h1>\n              <h3>{noteObj.noteSubTitle}</h3>\n              <p>{noteObj.noteDescription}</p>\n            </div>\n          </div>\n        );\n      })}\n    </main>\n  );\n};\n\nexport default Board;\n","import { Fragment, useState } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport FormModal from \"./components/formModal\";\nimport SearchModal from \"./components/searchModal\";\nimport Board from \"./components/Board\";\n\nfunction App() {\n  // show and hide implementations on form modal\n\n  const [showFormModal, setShowFormModal] = useState(false);\n\n  const openFormModal = () => {\n    setShowFormModal(true);\n  };\n\n  const closeFormModal = () => {\n    setShowFormModal(false);\n  };\n\n  // show and hide implementation on search modal\n\n  const [showSearchModal, setShowSearchModal] = useState(false);\n\n  const openSearchModal = () => {\n    setShowSearchModal(true);\n  };\n\n  const closeSearchModal = () => {\n    setShowSearchModal(false);\n  };\n\n  // got the main and sub title of the note\n\n  const [noteMainTitle, setNoteMainTitle] = useState(\"\");\n\n  const handleNoteMainTitle = (e) => {\n    setNoteMainTitle(e.target.value);\n  };\n\n  const [noteSubTitle, setNoteSubTitle] = useState(\"\");\n\n  const handleNoteSubTitle = (e) => {\n    setNoteSubTitle(e.target.value);\n  };\n\n  // got the description of the note\n\n  const [noteDescription, setNoteDescription] = useState(\"\");\n\n  const handleNoteDescription = (e) => {\n    setNoteDescription(e.target.value);\n  };\n\n  // submission of the note\n\n  const [notes, setNotes] = useState([]);\n\n  const handleNoteSubmission = (e) => {\n    e.preventDefault();\n    setNotes([...notes, { noteMainTitle, noteSubTitle, noteDescription }]);\n    setNoteMainTitle(\"\");\n    setNoteSubTitle(\"\");\n    setNoteDescription(\"\");\n  };\n\n  // clear all the notes\n\n  const handleClearNotes = () => {\n    setNotes(\"\");\n  };\n\n  // searching the notes\n\n  const [searchNoteQuery, setSearchNoteQuery] = useState(\"\");\n\n  const handleNoteSearchFunction = (e) => {\n    setSearchNoteQuery(e.target.value);\n  };\n\n  const handleSearchFunction = (e) => {\n    e.preventDefault();\n    const searchedNotes = notes.filter((obj) => {\n      return obj.noteMainTitle.includes(searchNoteQuery);\n    });\n    setNotes(searchedNotes);\n    console.log(searchedNotes);\n  };\n\n  return (\n    <Fragment>\n      <NavBar\n        // open modals functions props\n        showFormModalFunction={openFormModal}\n        showSearchModalFunction={openSearchModal}\n        noteClearanceFunction={handleClearNotes}\n      />\n      <FormModal\n        // modal props\n        noteModalShowStatement={showFormModal}\n        closeFormModalFunction={closeFormModal}\n        // input function props\n        noteMainTitleFunction={handleNoteMainTitle}\n        noteSubTitleFunction={handleNoteSubTitle}\n        noteDescriptionFunction={handleNoteDescription}\n        // input value props\n        noteMainTitleValue={noteMainTitle}\n        noteSubTitleValue={noteSubTitle}\n        noteDescriptionValue={noteDescription}\n        // note submission prop\n        noteSubmissionFunction={handleNoteSubmission}\n      />\n      <SearchModal\n        // modal props\n        searchModalShowStatement={showSearchModal}\n        closeSearchModalFunction={closeSearchModal}\n        // note search props\n        noteSearchFunction={handleSearchFunction}\n        searchQueryValue={searchNoteQuery}\n        noteSearchQueryFunction={handleNoteSearchFunction}\n      />\n      <Board notesData={notes} />\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}